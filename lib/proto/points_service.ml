(************************************************)
(*       AUTOGENERATED FILE - DO NOT EDIT!      *)
(************************************************)
(* Generated by: ocaml-protoc-plugin            *)
(* https://github.com/issuu/ocaml-protoc-plugin *)
(************************************************)
(*
  Source: points_service.proto
  Syntax: proto3
  Parameters:
    debug=false
    annot=''
    opens=[Google_types]
    int64_as_int=true
    int32_as_int=true
    fixed_as_int=false
    singleton_record=false
*)

open Ocaml_protoc_plugin.Runtime [@@warning "-33"]
open Google_types [@@warning "-33"]
(**/**)
module Imported'modules = struct
  module Points = Points
  module Struct = Struct
end
(**/**)
module Qdrant = struct
  module Points = struct
    module Upsert = struct
      let name = "/qdrant.Points/Upsert"
      module Request = Imported'modules.Points.Qdrant.UpsertPoints
      module Response = Imported'modules.Points.Qdrant.PointsOperationResponse
    end
    let upsert = 
      (module Imported'modules.Points.Qdrant.UpsertPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.UpsertPoints.t ), 
      (module Imported'modules.Points.Qdrant.PointsOperationResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.PointsOperationResponse.t )
    
    module Delete = struct
      let name = "/qdrant.Points/Delete"
      module Request = Imported'modules.Points.Qdrant.DeletePoints
      module Response = Imported'modules.Points.Qdrant.PointsOperationResponse
    end
    let delete = 
      (module Imported'modules.Points.Qdrant.DeletePoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.DeletePoints.t ), 
      (module Imported'modules.Points.Qdrant.PointsOperationResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.PointsOperationResponse.t )
    
    module Get = struct
      let name = "/qdrant.Points/Get"
      module Request = Imported'modules.Points.Qdrant.GetPoints
      module Response = Imported'modules.Points.Qdrant.GetResponse
    end
    let get = 
      (module Imported'modules.Points.Qdrant.GetPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.GetPoints.t ), 
      (module Imported'modules.Points.Qdrant.GetResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.GetResponse.t )
    
    module UpdateVectors = struct
      let name = "/qdrant.Points/UpdateVectors"
      module Request = Imported'modules.Points.Qdrant.UpdatePointVectors
      module Response = Imported'modules.Points.Qdrant.PointsOperationResponse
    end
    let updateVectors = 
      (module Imported'modules.Points.Qdrant.UpdatePointVectors : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.UpdatePointVectors.t ), 
      (module Imported'modules.Points.Qdrant.PointsOperationResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.PointsOperationResponse.t )
    
    module DeleteVectors = struct
      let name = "/qdrant.Points/DeleteVectors"
      module Request = Imported'modules.Points.Qdrant.DeletePointVectors
      module Response = Imported'modules.Points.Qdrant.PointsOperationResponse
    end
    let deleteVectors = 
      (module Imported'modules.Points.Qdrant.DeletePointVectors : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.DeletePointVectors.t ), 
      (module Imported'modules.Points.Qdrant.PointsOperationResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.PointsOperationResponse.t )
    
    module SetPayload = struct
      let name = "/qdrant.Points/SetPayload"
      module Request = Imported'modules.Points.Qdrant.SetPayloadPoints
      module Response = Imported'modules.Points.Qdrant.PointsOperationResponse
    end
    let setPayload = 
      (module Imported'modules.Points.Qdrant.SetPayloadPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.SetPayloadPoints.t ), 
      (module Imported'modules.Points.Qdrant.PointsOperationResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.PointsOperationResponse.t )
    
    module OverwritePayload = struct
      let name = "/qdrant.Points/OverwritePayload"
      module Request = Imported'modules.Points.Qdrant.SetPayloadPoints
      module Response = Imported'modules.Points.Qdrant.PointsOperationResponse
    end
    let overwritePayload = 
      (module Imported'modules.Points.Qdrant.SetPayloadPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.SetPayloadPoints.t ), 
      (module Imported'modules.Points.Qdrant.PointsOperationResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.PointsOperationResponse.t )
    
    module DeletePayload = struct
      let name = "/qdrant.Points/DeletePayload"
      module Request = Imported'modules.Points.Qdrant.DeletePayloadPoints
      module Response = Imported'modules.Points.Qdrant.PointsOperationResponse
    end
    let deletePayload = 
      (module Imported'modules.Points.Qdrant.DeletePayloadPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.DeletePayloadPoints.t ), 
      (module Imported'modules.Points.Qdrant.PointsOperationResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.PointsOperationResponse.t )
    
    module ClearPayload = struct
      let name = "/qdrant.Points/ClearPayload"
      module Request = Imported'modules.Points.Qdrant.ClearPayloadPoints
      module Response = Imported'modules.Points.Qdrant.PointsOperationResponse
    end
    let clearPayload = 
      (module Imported'modules.Points.Qdrant.ClearPayloadPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.ClearPayloadPoints.t ), 
      (module Imported'modules.Points.Qdrant.PointsOperationResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.PointsOperationResponse.t )
    
    module CreateFieldIndex = struct
      let name = "/qdrant.Points/CreateFieldIndex"
      module Request = Imported'modules.Points.Qdrant.CreateFieldIndexCollection
      module Response = Imported'modules.Points.Qdrant.PointsOperationResponse
    end
    let createFieldIndex = 
      (module Imported'modules.Points.Qdrant.CreateFieldIndexCollection : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.CreateFieldIndexCollection.t ), 
      (module Imported'modules.Points.Qdrant.PointsOperationResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.PointsOperationResponse.t )
    
    module DeleteFieldIndex = struct
      let name = "/qdrant.Points/DeleteFieldIndex"
      module Request = Imported'modules.Points.Qdrant.DeleteFieldIndexCollection
      module Response = Imported'modules.Points.Qdrant.PointsOperationResponse
    end
    let deleteFieldIndex = 
      (module Imported'modules.Points.Qdrant.DeleteFieldIndexCollection : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.DeleteFieldIndexCollection.t ), 
      (module Imported'modules.Points.Qdrant.PointsOperationResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.PointsOperationResponse.t )
    
    module Search = struct
      let name = "/qdrant.Points/Search"
      module Request = Imported'modules.Points.Qdrant.SearchPoints
      module Response = Imported'modules.Points.Qdrant.SearchResponse
    end
    let search = 
      (module Imported'modules.Points.Qdrant.SearchPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.SearchPoints.t ), 
      (module Imported'modules.Points.Qdrant.SearchResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.SearchResponse.t )
    
    module SearchBatch = struct
      let name = "/qdrant.Points/SearchBatch"
      module Request = Imported'modules.Points.Qdrant.SearchBatchPoints
      module Response = Imported'modules.Points.Qdrant.SearchBatchResponse
    end
    let searchBatch = 
      (module Imported'modules.Points.Qdrant.SearchBatchPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.SearchBatchPoints.t ), 
      (module Imported'modules.Points.Qdrant.SearchBatchResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.SearchBatchResponse.t )
    
    module SearchGroups = struct
      let name = "/qdrant.Points/SearchGroups"
      module Request = Imported'modules.Points.Qdrant.SearchPointGroups
      module Response = Imported'modules.Points.Qdrant.SearchGroupsResponse
    end
    let searchGroups = 
      (module Imported'modules.Points.Qdrant.SearchPointGroups : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.SearchPointGroups.t ), 
      (module Imported'modules.Points.Qdrant.SearchGroupsResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.SearchGroupsResponse.t )
    
    module Scroll = struct
      let name = "/qdrant.Points/Scroll"
      module Request = Imported'modules.Points.Qdrant.ScrollPoints
      module Response = Imported'modules.Points.Qdrant.ScrollResponse
    end
    let scroll = 
      (module Imported'modules.Points.Qdrant.ScrollPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.ScrollPoints.t ), 
      (module Imported'modules.Points.Qdrant.ScrollResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.ScrollResponse.t )
    
    module Recommend = struct
      let name = "/qdrant.Points/Recommend"
      module Request = Imported'modules.Points.Qdrant.RecommendPoints
      module Response = Imported'modules.Points.Qdrant.RecommendResponse
    end
    let recommend = 
      (module Imported'modules.Points.Qdrant.RecommendPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.RecommendPoints.t ), 
      (module Imported'modules.Points.Qdrant.RecommendResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.RecommendResponse.t )
    
    module RecommendBatch = struct
      let name = "/qdrant.Points/RecommendBatch"
      module Request = Imported'modules.Points.Qdrant.RecommendBatchPoints
      module Response = Imported'modules.Points.Qdrant.RecommendBatchResponse
    end
    let recommendBatch = 
      (module Imported'modules.Points.Qdrant.RecommendBatchPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.RecommendBatchPoints.t ), 
      (module Imported'modules.Points.Qdrant.RecommendBatchResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.RecommendBatchResponse.t )
    
    module RecommendGroups = struct
      let name = "/qdrant.Points/RecommendGroups"
      module Request = Imported'modules.Points.Qdrant.RecommendPointGroups
      module Response = Imported'modules.Points.Qdrant.RecommendGroupsResponse
    end
    let recommendGroups = 
      (module Imported'modules.Points.Qdrant.RecommendPointGroups : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.RecommendPointGroups.t ), 
      (module Imported'modules.Points.Qdrant.RecommendGroupsResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.RecommendGroupsResponse.t )
    
    module Count = struct
      let name = "/qdrant.Points/Count"
      module Request = Imported'modules.Points.Qdrant.CountPoints
      module Response = Imported'modules.Points.Qdrant.CountResponse
    end
    let count = 
      (module Imported'modules.Points.Qdrant.CountPoints : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.CountPoints.t ), 
      (module Imported'modules.Points.Qdrant.CountResponse : Runtime'.Service.Message with type t = Imported'modules.Points.Qdrant.CountResponse.t )
    
  end
end